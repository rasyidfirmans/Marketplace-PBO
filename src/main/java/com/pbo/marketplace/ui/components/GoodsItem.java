/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.pbo.marketplace.ui.components;

import java.util.ArrayList;
import java.util.List;

import com.pbo.marketplace.domain.entities.Cart;
import com.pbo.marketplace.domain.entities.Goods;
import com.pbo.marketplace.retrieve.DatabaseRetrieve;
import com.pbo.marketplace.writer.DatabaseWriter;

/**
 *
 * @author rasyid-firmansyah
 */
public class GoodsItem extends javax.swing.JPanel {
    /**
     * Creates new form GoodsItem
     */
    public GoodsItem(String goodsPicturePath, String goodsName, String goodsPrice, String sellerRegion,
            String goodsRating, String goodsQuantity) {
        initComponents();
        this.goodsImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource(goodsPicturePath)));
        this.goodsNameLabel.setText(goodsName);
        this.goodsPriceLabel.setText(goodsPrice);
        this.sellerRegionLabel.setText(sellerRegion);
        this.goodsRatingLabel.setText(goodsRating);
        this.quantityDisplay.setText(goodsQuantity);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panelGoodsWrapper = new javax.swing.JPanel();
        panelImageWrapper = new javax.swing.JPanel();
        goodsImageLabel = new javax.swing.JLabel();
        panelGoodsDesc = new javax.swing.JPanel();
        goodsNameLabel = new javax.swing.JLabel();
        goodsPriceLabel = new javax.swing.JLabel();
        sellerRegionLabel = new javax.swing.JLabel();
        goodsRatingLabel = new javax.swing.JLabel();
        panelNavButton = new javax.swing.JPanel();
        panelQuantityWrapper = new javax.swing.JPanel();
        decButton = new javax.swing.JButton();
        quantityDisplay = new javax.swing.JLabel();
        incButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1080, 180));
        setLayout(new java.awt.BorderLayout());

        panelGoodsWrapper.setPreferredSize(new java.awt.Dimension(918, 225));
        panelGoodsWrapper.setLayout(new javax.swing.BoxLayout(panelGoodsWrapper, javax.swing.BoxLayout.X_AXIS));

        panelImageWrapper.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(225, 225, 225)));
        panelImageWrapper.setLayout(new javax.swing.BoxLayout(panelImageWrapper, javax.swing.BoxLayout.LINE_AXIS));

        goodsImageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        goodsImageLabel
                .setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pbo/marketplace/assets/keyboard.png"))); // NOI18N
        panelImageWrapper.add(goodsImageLabel);

        panelGoodsWrapper.add(panelImageWrapper);

        panelGoodsDesc.setMinimumSize(new java.awt.Dimension(162, 18));
        java.awt.GridBagLayout panelGoodsDescLayout = new java.awt.GridBagLayout();
        panelGoodsDescLayout.columnWidths = new int[] { 666 };
        panelGoodsDesc.setLayout(panelGoodsDescLayout);

        goodsNameLabel.setFont(new java.awt.Font("Liberation Sans", 1, 22)); // NOI18N
        goodsNameLabel.setText("Goods Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 30, 5, 0);
        panelGoodsDesc.add(goodsNameLabel, gridBagConstraints);

        goodsPriceLabel.setText("Rp 100.000");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 30, 5, 0);
        panelGoodsDesc.add(goodsPriceLabel, gridBagConstraints);

        sellerRegionLabel.setText("Jawa Tengah");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 30, 5, 0);
        panelGoodsDesc.add(sellerRegionLabel, gridBagConstraints);

        goodsRatingLabel
                .setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pbo/marketplace/assets/star (1).png"))); // NOI18N
        goodsRatingLabel.setText("4.6/5");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 30, 5, 0);
        panelGoodsDesc.add(goodsRatingLabel, gridBagConstraints);

        panelGoodsWrapper.add(panelGoodsDesc);

        add(panelGoodsWrapper, java.awt.BorderLayout.WEST);

        panelNavButton.setPreferredSize(new java.awt.Dimension(162, 225));
        panelNavButton.setLayout(new javax.swing.BoxLayout(panelNavButton, javax.swing.BoxLayout.Y_AXIS));

        panelQuantityWrapper.setPreferredSize(new java.awt.Dimension(561, 113));
        panelQuantityWrapper.setLayout(new java.awt.GridBagLayout());

        decButton.setText("-");
        decButton.setPreferredSize(new java.awt.Dimension(30, 30));
        decButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        panelQuantityWrapper.add(decButton, gridBagConstraints);

        quantityDisplay.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        quantityDisplay.setText("0");
        quantityDisplay.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        quantityDisplay.setPreferredSize(new java.awt.Dimension(30, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        panelQuantityWrapper.add(quantityDisplay, gridBagConstraints);

        incButton.setText("+");
        incButton.setPreferredSize(new java.awt.Dimension(30, 30));
        incButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                incButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        panelQuantityWrapper.add(incButton, gridBagConstraints);

        removeButton.setBackground(new java.awt.Color(255, 47, 60));
        removeButton.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        removeButton.setText("Remove");
        removeButton.setPreferredSize(new java.awt.Dimension(90, 30));
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 21;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        panelQuantityWrapper.add(removeButton, gridBagConstraints);

        panelNavButton.add(panelQuantityWrapper);

        add(panelNavButton, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_removeButtonActionPerformed
        new Thread(() -> {
            List<Cart> cartList = new ArrayList<>();

            cartList = new DatabaseRetrieve().JSONParser(Cart.class,
                    "src/main/java/com/pbo/marketplace/database/carts.json");

            if (cartList == null) {
                cartList = new ArrayList<>();
            }

            for (Cart cart : cartList) {
                if (cart.getEmail().equals("rasyidnf.id@gmail.com")) {
                    List<Goods> goodsList = cart.getGoodsList();
                    List<Integer> quantity = cart.getQuantity();

                    long subtotal = 0;
                    long tax = 0;
                    long total = 0;

                    for (Goods goods : goodsList) {
                        if (goods.getGoodsName().equals(this.goodsNameLabel.getText())) {
                            subtotal = cart.getSubtotal()
                                    - (quantity.get(goodsList.indexOf(goods)) * goods.getGoodsPrice());
                            tax = (long) (subtotal * 0.1);
                            total = subtotal + tax;
                            quantity.remove(goodsList.indexOf(goods));
                            goodsList.remove(goods);
                            break;
                        }
                    }

                    cartList.set(cartList.indexOf(cart),
                            new Cart(cart.getEmail(), subtotal, tax, total, quantity, goodsList));

                    break;
                }
            }

            DatabaseWriter databaseWriter = new DatabaseWriter(cartList,
                    "src/main/java/com/pbo/marketplace/database/carts.json");

            javax.swing.SwingUtilities.invokeLater(() -> {
                javax.swing.JPanel parent = (javax.swing.JPanel) this.getParent();
                parent.remove(this);
                parent.revalidate();
                parent.repaint();
            });
        }).start();
    }// GEN-LAST:event_removeButtonActionPerformed

    private void decButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_decButtonActionPerformed
        new Thread(() -> {
            List<Cart> cartList = new ArrayList<>();

            cartList = new DatabaseRetrieve().JSONParser(Cart.class,
                    "src/main/java/com/pbo/marketplace/database/carts.json");

            if (cartList == null) {
                cartList = new ArrayList<>();
            }

            for (Cart cart : cartList) {
                if (cart.getEmail().equals("rasyidnf.id@gmail.com")) {
                    List<Goods> goodsList = cart.getGoodsList();
                    List<Integer> quantity = cart.getQuantity();

                    long subtotal = 0;
                    long tax = 0;
                    long total = 0;

                    for (Goods goods : goodsList) {
                        if (goods.getGoodsName().equals(this.goodsNameLabel.getText())) {
                            int quantityValue = quantity.get(goodsList.indexOf(goods));
                            if ((quantityValue - 1) > 0) {
                                quantity.set(goodsList.indexOf(goods), quantityValue - 1);
                                subtotal = cart.getSubtotal() - goods.getGoodsPrice();
                                tax = (long) (subtotal * 0.1);
                                total = subtotal + tax;

                                javax.swing.SwingUtilities.invokeLater(() -> {
                                    this.quantityDisplay.setText(String.valueOf(quantityValue - 1));
                                    javax.swing.JPanel parent = (javax.swing.JPanel) this.getParent();
                                    parent.revalidate();
                                    parent.repaint();
                                });

                            } else if ((quantityValue - 1) == 0) {
                                subtotal = cart.getSubtotal()
                                        - (quantity.get(goodsList.indexOf(goods))
                                                * goodsList.get(goodsList.indexOf(goods)).getGoodsPrice());
                                tax = (long) (subtotal * 0.1);
                                total = subtotal + tax;
                                quantity.remove(goodsList.indexOf(goods));
                                goodsList.remove(goods);

                                javax.swing.SwingUtilities.invokeLater(() -> {
                                    javax.swing.JPanel parent = (javax.swing.JPanel) this.getParent();
                                    parent.remove(this);
                                    parent.revalidate();
                                    parent.repaint();
                                });

                            }

                            break;
                        }
                    }

                    cartList.set(cartList.indexOf(cart),
                            new Cart(cart.getEmail(), subtotal, tax, total, quantity, goodsList));

                    break;
                }
            }

            DatabaseWriter databaseWriter = new DatabaseWriter(cartList,
                    "src/main/java/com/pbo/marketplace/database/carts.json");

        }).start();
    }// GEN-LAST:event_decButtonActionPerformed

    private void incButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_incButtonActionPerformed
        new Thread(() -> {
            List<Cart> cartList = new ArrayList<>();

            cartList = new DatabaseRetrieve().JSONParser(Cart.class,
                    "src/main/java/com/pbo/marketplace/database/carts.json");

            if (cartList == null) {
                cartList = new ArrayList<>();
            }

            for (Cart cart : cartList) {
                if (cart.getEmail().equals("rasyidnf.id@gmail.com")) {
                    List<Goods> goodsList = cart.getGoodsList();
                    List<Integer> quantity = cart.getQuantity();

                    long subtotal = 0;
                    long tax = 0;
                    long total = 0;

                    for (Goods goods : goodsList) {
                        if (goods.getGoodsName().equals(this.goodsNameLabel.getText())) {
                            int quantityValue = quantity.get(goodsList.indexOf(goods));
                            quantity.set(goodsList.indexOf(goods), quantityValue + 1);
                            subtotal = cart.getSubtotal() + goods.getGoodsPrice();
                            tax = (long) (subtotal * 0.1);
                            total = subtotal + tax;

                            javax.swing.SwingUtilities.invokeLater(() -> {
                                this.quantityDisplay.setText(String.valueOf(quantityValue + 1));
                                javax.swing.JPanel parent = (javax.swing.JPanel) this.getParent();
                                parent.revalidate();
                                parent.repaint();
                            });

                            break;
                        }
                    }

                    cartList.set(cartList.indexOf(cart),
                            new Cart(cart.getEmail(), subtotal, tax, total, quantity, goodsList));

                    break;
                }
            }

            DatabaseWriter databaseWriter = new DatabaseWriter(cartList,
                    "src/main/java/com/pbo/marketplace/database/carts.json");

        }).start();
    }// GEN-LAST:event_incButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton decButton;
    private javax.swing.JLabel goodsImageLabel;
    private javax.swing.JLabel goodsNameLabel;
    private javax.swing.JLabel goodsPriceLabel;
    private javax.swing.JLabel goodsRatingLabel;
    private javax.swing.JButton incButton;
    private javax.swing.JPanel panelGoodsDesc;
    private javax.swing.JPanel panelGoodsWrapper;
    private javax.swing.JPanel panelImageWrapper;
    private javax.swing.JPanel panelNavButton;
    private javax.swing.JPanel panelQuantityWrapper;
    private javax.swing.JLabel quantityDisplay;
    private javax.swing.JButton removeButton;
    private javax.swing.JLabel sellerRegionLabel;
    // End of variables declaration//GEN-END:variables
}
